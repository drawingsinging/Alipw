
		<div id="content">
<!-- ============================== class title ============================ -->
			<h1 class="classTitle">
				{!
					var classType = "";
					
					if (data.isBuiltin()) {
						classType += "Built-In ";
					}
					
					if (data.isNamespace) {
						if (data.is('FUNCTION')) {
							classType += "Function ";
						}
						
						classType += "Namespace ";
					}else if(data.type == "singleton"){
						classType += "Singleton Class ";
					
					}else {
						classType += "Class ";
					}
				!}
				{+classType+}{+data.alias+}
			</h1>

<!-- ============================== class summary ========================== -->			
			<div class="description">
				<if test="data.version">
					<div class="row">
						<strong>Version</strong> {+ data.version +}.
					</div>
				</if>
				<if test="data.augments.length">
					<div class="row">
					<strong>Extends</strong>
					{+
						data.augments
						.sort()
						.map(
							function($) { return '<a href="#doc_' + $.toString() + '" onclick="alipwsite.modules.doc.context.loadClassDetail(\'' + $.toString() + '\',true);return false;">' + $.toString() + '</a>'; }
						)
						.join(", ")
					+}.
					</div>
				</if>
				<if test="data.inheritanceTree">
					<div class="row">
					<strong>Inheritance</strong> {+
						data.inheritanceTree
					+}
					</div>
				</if>
								
				<if test="!data.isBuiltin()">{# isn't defined in any file #}
					<div class="row">
						<strong>Defined in: </strong> {!
							var filename = data.srcFile.replace(/[\/\\]/g,'_').split('_');
							filename = filename[filename.length-1];
							
							output += '<a class="link-source-file" basehref="/classes/src/' + filename + '.html" href="#" target="_blank">' + filename + '</a>';
						!}.
					</div>
				</if>
				<if test="data.demo">
					<div class="row">
						<strong>Demo: </strong> <a href="{+data.demo+}" target="_blank">View Demo</a>
					</div>
				</if>
				<if test="data.author">
					<div class="row">
						<strong>Author: </strong> {+data.author+}.
					</div>
				</if>
				
				<div class="row">
				{+resolveLinks(data.desc)+}
				</div>
				<if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
					<if test="data.example.length">
						<div class="row">
							<for each="example" in="data.example">
								<pre class="code">{+example+}</pre>
							</for>
						</div>
					</if>
					<if test="data.params.length">
						<div class="row">
							<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							<for each="item" in="data.params">
								<dt>
									{+((item.type)?""+("<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type)+"}</span> ")) : "")+} <b>{+item.name+}</b>
									<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
								</dt>
									<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</div>
					</if>
					<if test="data.deprecated">
						<div class="row">
							<dl class="detailList">
							<dt class="heading">Deprecated:</dt>
							<dt>
								{+resolveLinks(data.deprecated)+}
							</dt>
							</dl>
						</div>
					</if>
					<if test="data.since">
						<div class="row">
							<dl class="detailList">
							<dt class="heading">Since:</dt>
								<dd>{+ data.since +}</dd>
							</dl>
						</div>
					</if>
					<if test="data.exceptions.length">
						<div class="row">
							<dl class="detailList">
							<dt class="heading">Throws:</dt>
							<for each="item" in="data.exceptions">
								<dt>
									{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
								</dt>
									<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</div>
					</if>
					<if test="data.returns.length">
						<div class="row">
							<dl class="detailList">
							<dt class="heading">Returns:</dt>
							<for each="item" in="data.returns">
									<dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
							</for>
							</dl>
						</div>
					</if>
					<if test="data.requires.length">
						<div class="row">
							<dl class="detailList">
							<dt class="heading">Requires:</dt>
							<for each="item" in="data.requires">
								<dd>{+ new Link().toSymbol(item) +}</dd>
							</for>
							</dl>
						</div>
					</if>
					<if test="data.see.length">
						<div class="row">
							<dl class="detailList">
							<dt class="heading">See:</dt>
							<for each="item" in="data.see">
								<dd>{+ new Link().toSymbol(item) +}</dd>
							</for>
							</dl>
						</div>
					</if>
				</if>
			</div>

<!-- ============================== constructor summary ==================== -->			
			<if test="!data.isBuiltin() && (data.isNamespace || data.is('CONSTRUCTOR'))">
			<div class="summaryTable">
			<table summary="A summary of the constructor documented in the class {+data.alias+}.">
				<caption>{+classType+}Summary</caption>
				<thead>
					<tr>
						<!--
						<th scope="col" width="100"></th>
						-->
						<th scope="col">
							<if test="classType != 'Namespace ' && classType != 'Singleton Class '">
								Constructor Name and Description
							</if>
							<if test="classType == 'Singleton Class '">
								Class Name and Description
							</if>
							<if test="classType == 'Namespace '">
								Name Space
							</if>
						</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<!--
						<td class="attributes">{!
							if (data.isPrivate) output += "&lt;private&gt; ";
							if (data.isInner) output += "&lt;inner&gt; ";
						!}&nbsp;</td>
						-->
						<td class="nameDescription" {!if (data.comment.getTag("hilited").length){output += 'style="color: red"'}!}>
							<div class="fixedFont">
								<b>{+ data.alias+}</b><if test="classType != 'Namespace ' && classType != 'Singleton Class '">{+ makeSignature(data.params) +}</if>
							</div>
							<div class="description">{+resolveLinks(summarize(data.desc))+}</div>
						</td>
					</tr>
				</tbody>
			</table>
			</div>
			</if>

<!-- ============================== properties summary ===================== -->
			<if test="data.properties.length">
				{!var properties = data.properties.filter(function($){return !$.isNamespace}).sort(makeSortby("name"));!}
				<div class="summaryTable">
				<table summary="A summary of the fields documented in the class {+data.alias+}.">
					<caption>Properties</caption>
					<thead>
						<tr>
							<!--
							<th scope="col" width="100"></th>
							-->
							<th scope="col">Property</th>
							<th scope="col" width="200">Defined By</th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="properties">
						<tr>
							<!--
							<td class="attributes">{!
								if (member.isPrivate) output += "&lt;private&gt; ";
								if (member.isInner) output += "&lt;inner&gt; ";
								if (member.isStatic) output += "&lt;static&gt; ";
								if (member.isConstant) output += "&lt;constant&gt; ";
							!}&nbsp;</td>
							-->
							<td class="nameDescription">
								<div class="darkblue">
									<if test="(member.isStatic || data.type == 'singleton') && member.memberOf != '_global_'">{+data.alias+}.</if><b>{+ member.name + ' : ' +}</b>
									<span class="class_link">{+ new Link().toSymbol(member.type) +}</span>
								</div>
								<div class="description">{+resolveLinks(summarize(member.desc))+}</div>
								
								<if test="member.example.length">
									<for each="example" in="member.example">
										<pre class="code">{+example+}</pre>
									</for>
								</if>
			
								<if test="member.deprecated">
									<dl class="detailList">
									<dt class="heading">Deprecated:</dt>
									<dt>
										{+ resolveLinks(member.deprecated) +}
									</dt>
									</dl>
								</if>
								<if test="member.since">
									<dl class="detailList">
									<dt class="heading">Since:</dt>
										<dd>{+ member.since +}</dd>
									</dl>
								</if>
								<if test="member.see.length">
									<dl class="detailList">
									<dt class="heading">See:</dt>
									<for each="item" in="member.see">
									<dd>{+ new Link().toSymbol(item) +}</dd>
									</for>
									</dl>
								</if>
								<if test="member.defaultValue">
									<dl class="detailList">
									<dt class="heading">Default Value:</dt>
									<dd>
										{+resolveLinks(member.defaultValue)+}
									</dd>
									</dl>
								</if>
							</td>
							<td>
								{+ member.memberOf == data.alias?member.memberOf:('<a href="#doc_' + member.memberOf + '" onclick="alipwsite.modules.doc.context.loadClassDetail(\'' + member.memberOf + '\',true); return false;">' + member.memberOf + '</a>') +}
							</td>
						</tr>
					</for>
					</tbody>
				</table>
				</div>
			</if>

<!-- ============================== methods summary ======================== -->
			<if test="data.methods.length">
				{! var methods = data.methods.filter(function($){return !$.isNamespace}).sort(makeSortby("name")); !}
				<div class="summaryTable">
				<table summary="A summary of the methods documented in the class {+data.alias+}.">
					<caption>Methods</caption>
					<thead>
						<tr>
							<!--
							<th scope="col" width="100"></th>
							-->
							<th scope="col">Method</th>
							<th scope="col" width="200">Defined By</th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="methods">
						<tr>
							<!--
							<td class="attributes">{!
								if (member.isPrivate) output += "&lt;private&gt; ";
								if (member.isInner) output += "&lt;inner&gt; ";
								if (member.isStatic) output += "&lt;static&gt; ";
							!}&nbsp;</td>
							-->
							<td class="nameDescription">
								<div class="darkblue"><if test="(member.isStatic || data.type == 'singleton') && member.memberOf != '_global_'">{+data.alias+}.</if><b>{+ member.name.replace(/\^\d+$/, '') +}</b>{+makeSignature(member.params)+}
								</div>
								<div class="description">{+resolveLinks(summarize(member.desc))+}</div>
								<if test="member.example.length">
									<for each="example" in="member.example">
										<pre class="code">{+example+}</pre>
									</for>
								</if>
								
								<if test="member.params.length">
									<dl class="detailList">
									<dt class="heading">Parameters</dt>
									<dd>
										<ul>
											<for each="item" in="member.params">
												<li>
													<span class="darkblue">{+item.name+} : </span>{+((item.type)?"<span class=\"class_link\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}
													<if test="item.isOptional"><i class="green">Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
													<dd>{+resolveLinks(item.desc)+}</dd>
												</li>
											</for>
										</ul>
									</dd>
									</dl>
								</if>
								<if test="member.deprecated">
									<dl class="detailList">
									<dt class="heading">Deprecated:</dt>
									<dt>
										{+ resolveLinks(member.deprecated) +}
									</dt>
									</dl>
								</if>
								<if test="member.since">
									<dl class="detailList">
									<dt class="heading">Since:</dt>
										<dd>{+ member.since +}</dd>
									</dl>
									</dl>
								</if>
								<if test="member.exceptions.length">
									<dl class="detailList">
										<dt class="heading">Throws:</dt>
										<dd>
											<ul>
												<for each="item" in="member.exceptions">
													<li>
														{+((item.type)?"<span class=\"class_link\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
														<dd>{+resolveLinks(item.desc)+}</dd>
													</li>
												</for>
											</ul>
										</dd>
									</dl>
								</if>
								<if test="member.returns.length">
									<dl class="detailList">
										<dt class="heading">Returns:</dt>
										<dd>
											<ul>
												<for each="item" in="member.returns">
													<li>
														{+((item.type)?"<span class=\"class_link\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}<br />
														{+resolveLinks(item.desc)+}
													</li>
												</for>
											</ul>
										</dd>
									</dl>
								</if>
								<if test="member.requires.length">
									<dl class="detailList">
									<dt class="heading">Requires:</dt>
									<for each="item" in="member.requires">
										<dd>{+ resolveLinks(item) +}</dd>
									</for>
									</dl>
								</if>
								<if test="member.see.length">
									<dl class="detailList">
									<dt class="heading">See:</dt>
									<for each="item" in="member.see">
										<dd>{+ new Link().toSymbol(item) +}</dd>
									</for>
									</dl>
								</if>
							</td>
							<td>
								{+ member.memberOf == data.alias?member.memberOf:('<a href="#doc_' + member.memberOf + '" onclick="alipwsite.modules.doc.context.loadClassDetail(\'' + member.memberOf + '\',true); return false;">' + member.memberOf + '</a>') +}
							</td>
						</tr>
					</for>
					</tbody>
				</table>
				</div>
			</if>
<!-- ============================== events summary ======================== -->
			<if test="data.events.length">
				{! var events = data.events.filter(function($){return !$.isNamespace}).sort(makeSortby("name")); !}
				<div class="summaryTable">
				<table summary="A summary of the events documented in the class {+data.alias+}.">
					<caption>Events</caption>
					<thead>
						<tr>
							<!--
							<th scope="col" width="100"></th>
							-->
							<th scope="col">Event</th>
							<th scope="col" width="200">Defined By</th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="events">
						<tr>
							<!--
							<td class="attributes">{!
								if (member.isPrivate) output += "&lt;private&gt; ";
								if (member.isInner) output += "&lt;inner&gt; ";
								if (member.isStatic) output += "&lt;static&gt; ";
							!}&nbsp;</td>
							-->
							<td class="nameDescription">
								<div class="darkblue"><if test="member.isStatic && member.memberOf != '_global_'">{+data.alias+}.</if><b>{+ member.name +}</b>{+makeSignature(member.params)+}
								</div>
								<div class="description">{+resolveLinks(summarize(member.desc))+}</div>
								<if test="member.example.length">
									<for each="example" in="member.example">
										<pre class="code">{+example+}</pre>
									</for>
								</if>
								
								<if test="member.params.length">
									<dl class="detailList">
									<dt class="heading">Parameters</dt>
										<dd>
											<ul>
											<for each="item" in="member.params">
												<li>
													<span>{+item.name+} : </span>{+((item.type)?"<span class=\"class_link\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}
													<if test="item.isOptional"><i>Optional<if test="item.defaultValue">, Default: {+item.defaultValue+}</if></i></if>
													<dd>{+resolveLinks(item.desc)+}</dd>
												</li>
											</for>
											</ul>
										</dd>
									</dl>
								</if>
								<if test="member.deprecated">
									<dl class="detailList">
									<dt class="heading">Deprecated:</dt>
									<dt>
										{+ resolveLinks(member.deprecated) +}
									</dt>
									</dl>
								</if>
								<if test="member.since">
									<dl class="detailList">
									<dt class="heading">Since:</dt>
										<dd>{+ member.since +}</dd>
									</dl>
									</dl>
								</if>
								<if test="member.exceptions.length">
									<dl class="detailList">
									<dt class="heading">Throws:</dt>
									<for each="item" in="member.exceptions">
										<dt>
											{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+} <b>{+item.name+}</b>
										</dt>
										<dd>{+ resolveLinks(item.desc) +}</dd>
									</for>
									</dl>
								</if>
								<if test="member.returns.length">
									<dl class="detailList">
									<dt class="heading">Returns:</dt>
									<for each="item" in="member.returns">
										<dd>{+((item.type)?"<span class=\"light fixedFont\">{"+(new Link().toSymbol(item.type))+"}</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
									</for>
									</dl>
								</if>
								<if test="member.requires.length">
									<dl class="detailList">
									<dt class="heading">Requires:</dt>
									<for each="item" in="member.requires">
										<dd>{+ resolveLinks(item) +}</dd>
									</for>
									</dl>
								</if>
								<if test="member.see.length">
									<dl class="detailList">
									<dt class="heading">See:</dt>
									<for each="item" in="member.see">
										<dd>{+ new Link().toSymbol(item) +}</dd>
									</for>
									</dl>
								</if>
							</td>
							<td>
								{+ member.memberOf == data.alias?member.memberOf:('<a href="#doc_' + member.memberOf + '" onclick="alipwsite.modules.doc.context.loadClassDetail(\'' + member.memberOf + '\',true); return false;">' + member.memberOf + '</a>') +}
							</td>
						</tr>
					</for>
					</tbody>
				</table>
				</div>
			</if>
		</div>

